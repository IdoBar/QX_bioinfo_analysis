@article{jonesInterProScanGenomescaleProtein2014,
  title = {{{InterProScan}} 5: Genome-Scale Protein Function Classification},
  shorttitle = {{{InterProScan}} 5},
  author = {Jones, Philip and Binns, David and Chang, Hsin-Yu and Fraser, Matthew and Li, Weizhong and McAnulla, Craig and McWilliam, Hamish and Maslen, John and Mitchell, Alex and Nuka, Gift and Pesseat, Sebastien and Quinn, Antony F. and Sangrador-Vegas, Amaia and Scheremetjew, Maxim and Yong, Siew-Yit and Lopez, Rodrigo and Hunter, Sarah},
  date = {2014-01-05},
  journaltitle = {Bioinformatics},
  shortjournal = {Bioinformatics},
  volume = {30},
  number = {9},
  eprint = {24451626},
  eprinttype = {pmid},
  pages = {1236--1240},
  issn = {1367-4803, 1460-2059},
  doi = {10.1093/bioinformatics/btu031},
  url = {http://bioinformatics.oxfordjournals.org/content/30/9/1236},
  urldate = {2015-04-21},
  abstract = {Motivation: Robust large-scale sequence analysis is a major challenge in modern genomic science, where biologists are frequently trying to characterize many millions of sequences. Here, we describe a new Java-based architecture for the widely used protein function prediction software package InterProScan. Developments include improvements and additions to the outputs of the software and the complete reimplementation of the software framework, resulting in a flexible and stable system that is able to use both multiprocessor machines and/or conventional clusters to achieve scalable distributed data analysis. InterProScan is freely available for download from the EMBl-EBI FTP site and the open source code is hosted at Google Code. Availability and implementation: InterProScan is distributed via FTP at ftp://ftp.ebi.ac.uk/pub/software/unix/iprscan/5/ and the source code is available from http://code.google.com/p/interproscan/. Contact: http://www.ebi.ac.uk/support or interhelp@ebi.ac.uk or mitchell@ebi.ac.uk},
  langid = {english}
}

@article{mitchellInterPro2019Improving2019,
  title = {{{InterPro}} in 2019: Improving Coverage, Classification and Access to Protein Sequence Annotations},
  shorttitle = {{{InterPro}} in 2019},
  author = {Mitchell, Alex L and Attwood, Teresa K and Babbitt, Patricia C and Blum, Matthias and Bork, Peer and Bridge, Alan and Brown, Shoshana D and Chang, Hsin-Yu and El-Gebali, Sara and Fraser, Matthew I and Gough, Julian and Haft, David R and Huang, Hongzhan and Letunic, Ivica and Lopez, Rodrigo and Luciani, Aur\'elien and Madeira, Fabio and Marchler-Bauer, Aron and Mi, Huaiyu and Natale, Darren A and Necci, Marco and Nuka, Gift and Orengo, Christine and Pandurangan, Arun P and Paysan-Lafosse, Typhaine and Pesseat, Sebastien and Potter, Simon C and Qureshi, Matloob A and Rawlings, Neil D and Redaschi, Nicole and Richardson, Lorna J and Rivoire, Catherine and Salazar, Gustavo A and Sangrador-Vegas, Amaia and Sigrist, Christian J~A and Sillitoe, Ian and Sutton, Granger G and Thanki, Narmada and Thomas, Paul D and Tosatto, Silvio C~E and Yong, Siew-Yit and Finn, Robert D},
  date = {2019-01-08},
  journaltitle = {Nucleic Acids Research},
  shortjournal = {Nucleic Acids Research},
  volume = {47},
  number = {D1},
  pages = {D351-D360},
  issn = {0305-1048},
  doi = {10.1093/nar/gky1100},
  url = {https://doi.org/10.1093/nar/gky1100},
  urldate = {2021-06-09},
  abstract = {The InterPro database (http://www.ebi.ac.uk/interpro/) classifies protein sequences into families and predicts the presence of functionally important domains and sites. Here, we report recent developments with InterPro (version 70.0) and its associated software, including an 18\% growth in the size of the database in terms on new InterPro entries, updates to content, the inclusion of an additional entry type, refined modelling of discontinuous domains, and the development of a new programmatic interface and website. These developments extend and enrich the information provided by InterPro, and provide greater flexibility in terms of data access. We also show that InterPro's sequence coverage has kept pace with the growth of UniProtKB, and discuss how our evaluation of residue coverage may help guide future curation activities.}
}

@online{julianSYNYPipelineInvestigate2024,
  title = {{{SYNY}}: A Pipeline to Investigate and Visualize Collinearity between Genomes},
  shorttitle = {{{SYNY}}},
  author = {Julian, Alexander Thomas and Pombert, Jean-Fran\c cois},
  date = {2024-05-13},
  eprinttype = {bioRxiv},
  eprintclass = {New Results},
  pages = {2024.05.09.593317},
  doi = {10.1101/2024.05.09.593317},
  url = {https://www.biorxiv.org/content/10.1101/2024.05.09.593317v1},
  urldate = {2024-11-29},
  abstract = {Abstract                        Investigating collinearity between chromosomes is often used in comparative genomics to help identify gene orthologs, pinpoint genes that might have been overlooked as part of annotation processes and/or perform various evolutionary inferences. Collinear segments, also known as syntenic blocks, can be inferred from sequence alignments and/or from the identification of genes arrayed in the same order and relative orientations between investigated genomes. To help perform these analyses and assess their outcomes, we built a simple pipeline called SYNY (for synteny) that implements the two distinct approaches and produces different visualizations. The SYNY pipeline was built with ease of use in mind and runs on modest hardware. The pipeline is written in Perl and Python and is available on GitHub (             https://github.com/PombertLab/SYNY             ) under the permissive MIT license.},
  langid = {american},
  pubstate = {prepublished}
}

@article{buchfinkFastSensitiveProtein2015a,
  title = {Fast and Sensitive Protein Alignment Using {{DIAMOND}}},
  author = {Buchfink, Benjamin and Xie, Chao and Huson, Daniel H.},
  date = {2015-01},
  journaltitle = {Nature Methods},
  volume = {12},
  number = {1},
  pages = {59--60},
  publisher = {Nature Publishing Group},
  issn = {1548-7105},
  doi = {10.1038/nmeth.3176},
  abstract = {The open-source DIAMOND software provides protein alignment that is 20,000 times faster on short reads than BLASTX at similar sensitivity, for rapid analysis of large metagenomics data sets on a desktop computer.},
  issue = {1},
  langid = {english}
}

@article{marcaisMUMmer4FastVersatile2018,
  title = {{{MUMmer4}}: {{A}} Fast and Versatile Genome Alignment System},
  shorttitle = {{{MUMmer4}}},
  author = {Mar\c cais, Guillaume and Delcher, Arthur L. and Phillippy, Adam M. and Coston, Rachel and Salzberg, Steven L. and Zimin, Aleksey},
  editor = {Darling, Aaron E.},
  date = {2018-01-26},
  journaltitle = {PLOS Computational Biology},
  shortjournal = {PLOS Comput. Biol.},
  volume = {14},
  number = {1},
  pages = {e1005944},
  publisher = {Public Library of Science},
  issn = {1553-7358},
  doi = {10.1371/journal.pcbi.1005944},
  url = {https://journals.plos.org/ploscompbiol/article?id=10.1371/journal.pcbi.1005944},
  urldate = {2023-07-04},
  abstract = {The MUMmer system and the genome sequence aligner nucmer included within it are among the most widely used alignment packages in genomics. Since the last major release of MUMmer version 3 in 2004, it has been applied to many types of problems including aligning whole genome sequences, aligning reads to a reference genome, and comparing different assemblies of the same genome. Despite its broad utility, MUMmer3 has limitations that can make it difficult to use for large genomes and for the very large sequence data sets that are common today. In this paper we describe MUMmer4, a substantially improved version of MUMmer that addresses genome size constraints by changing the 32-bit suffix tree data structure at the core of MUMmer to a 48-bit suffix array, and that offers improved speed through parallel processing of input query sequences. With a theoretical limit on the input size of 141Tbp, MUMmer4 can now work with input sequences of any biologically realistic length. We show that as a result of these enhancements, the nucmer program in MUMmer4 is easily able to handle alignments of large genomes; we illustrate this with an alignment of the human and chimpanzee genomes, which allows us to compute that the two species are 98\% identical across 96\% of their length. With the enhancements described here, MUMmer4 can also be used to efficiently align reads to reference genomes, although it is less sensitive and accurate than the dedicated read aligners. The nucmer aligner in MUMmer4 can now be called from scripting languages such as Perl, Python and Ruby. These improvements make MUMer4 one the most versatile genome alignment packages available.},
  langid = {american},
  keywords = {Animal genomics,Arabidopsis thaliana,Computer hardware,Computer software,Genomics,Human genomics,Plant genomics,Sequence alignment}
}
